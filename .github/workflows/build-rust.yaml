on:
  push:
    paths:
      - '*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '.github/workflows/build-rust.yaml'
  pull_request:
    paths:
      - '*.rs'
      - '**/Cargo.toml'
      - '**/Cargo.lock'
      - '.github/workflows/build-rust.yaml'
name: Rust
jobs:
  build:
    name: Build ${{ matrix.target.build_target }}
    strategy:
      fail-fast: false
      matrix:
        # TODO windows?
        target:
          - os: ubuntu-latest
            build_target: x86_64-unknown-linux-gnu
          #- os: ubuntu-latest
          #  build_target: aarch64-unknown-linux-gnu
          #  # At the moment there is no runner with arm architecture so we skip this for now
          #  compile_only: true
          #  install: |
          #    sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          - os: macos-latest
            build_target: x86_64-apple-darwin
          - os: windows-latest
            build_target: x86_64-pc-windows-gnu
          - os: windows-latest
            build_target: x86_64-pc-windows-msvc
          #- os: macos-latest
          #  build_target: aarch64-apple-darwin
          #  # At the moment there is no runner with arm architecture so we skip this for now
          #  compile_only: true

    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target.build_target }}
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      - name: Install Dependencies
        if: ${{ matrix.target.install }}
        run: ${{ matrix.target.install }}
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Check Fmt
        # Continue on error when it not the mail branch
        continue-on-error: ${{ github.ref != 'refs/heads/main' }}
        run: cargo fmt --all --check --verbose -- --color=always
      - name: Lint
        run: cargo clippy --target ${{ matrix.target.build_target }} --workspace --all-features
      - name: Build
        run: cargo build --target ${{ matrix.target.build_target }} --workspace
      - name: Test
        if: ${{ matrix.target.compile_only != 'true' }}
        run: cargo test --target ${{ matrix.target.build_target }} --workspace --all-features
      - name: Build (Release)
        run: cargo build --target ${{ matrix.target.build_target }} --workspace --release
      - name: Benchmark
        if: ${{ matrix.target.compile_only != 'true' }}
        run: cargo bench --target ${{ matrix.target.build_target }} --workspace --all-features
