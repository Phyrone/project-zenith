syntax = "proto3";


/* === Common === */
package common;

message ChunkPosition{
  sint64 x = 0x01;
  sint64 y = 0x02;
  sint64 z = 0x03;

  uint32 dimension = 0x10;
}

message Position{
  sint64 x = 0x01;
  sint64 y = 0x02;
  sint64 z = 0x03;

  uint32 dimension = 0x10;

  optional double fine_x = 0x21;
  optional double fine_y = 0x22;
  optional double fine_z = 0x23;
}

message Velocity{
  double x = 0x01;
  double y = 0x02;
  double z = 0x03;
}

message Rotation{
  float pitch = 0x01;
  float yaw = 0x02;
}

message MessageComponent{
  optional MessageFormating format = 0x01;

  oneof content{
    string text = 0x10;
    ResourceKey localized = 0x12;
    ResourceKey item = 0x21;
  }

  //append components after this (inherit)
  repeated MessageComponent childs = 0xC1;
}
message MessageComponentArray{
  repeated MessageComponent childs = 0x01;
}
message MessageFormating{
  reserved 1; //Color
  reserved 2; //Bold
  reserved 3; //Italic
  reserved 4; //Underlined
  reserved 5; //Strikethrough
  reserved 6; //Obfuscated

  reserved 0x0F; //font
}


//resource keys can be used to reference resources like blocks, items, entities, etc.
message ResourceKey{
  oneof key{
    //when indexed
    uint64 index = 0x01;
    ResourceIdentifier identifier = 0x02;
  }
  //additional data is if present encoded in messagepack format
  optional bytes data = 0x0F;
}

message ResourceIdentifier{
  //null = core game
  optional  string namespace = 0x01;
  string id = 0x02;
  //maybe for common variants e.g. wood type
  optional  uint32 variant = 0x03;
}

